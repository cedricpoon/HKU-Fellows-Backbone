openapi: 3.0.0
info:
  title: HKU Fellows Backbone
  description: The RESTful WebAPI of Project HKU Fellows [https://i.cs.hku.hk/fyp/2018/fyp18005/](https://i.cs.hku.hk/fyp/2018/fyp18005/)
  version: 0.0.0 Private
servers:
- url: /
  description: Local server by `npm start` or `npm run docker`
- url: https://api.hkufellows.ga
  description: Production server located on AWS EC2
tags:
  - name: Miscellaneous
    description: Common routes from `index.js`
  - name: Authentication
    description: Login related routes from `login.js`
  - name: Posts
    description: Post related routes from `post.js`
paths:
  /post/{code}/{index}:
    post:
      summary: Load posts by course code and index
      description: Load posts according the course code then return in json format
      tags:
        - Posts
      parameters:
        - name: code
          in: path
          description: Course code
          required: true
          schema:
            type: string
        - name: index
          in: path
          description: Page index of posts returned
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  $ref: "#/components/schemas/username"
                token:
                  $ref: "#/components/schemas/token"
                moodleKey:
                  $ref: "#/components/schemas/moodleKey"
      response:
        200:
          description: 200 - Success<br>204 - No Content<br>401 - Unauthenticated<br>408 - MoodleKey not valid<br>500 - Unknown error<br>502 - RDS connectivity issue
          content:
            application/json:
              scheme:
                properties:
                  id: ...
  /login/validate:
    post:
      summary: Validate the `moodleKey` in Moodle
      description: Since `moodleKey` may expire as being a cookie, this route helps checking its accessibility.
      tags:
        - Authentication
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                moodleKey:
                  $ref: "#/components/schemas/moodleKey"
      responses:
        200:
          description: 200 - Success<br>422 - Parameter mismatched<br>500 - Unknown error
          content:
            application/json:
              schema:
                properties:
                  isValid:
                    type: boolean
                    description: Flag showing the usability of moodleKey in accessing Moodle
          examples:
            Success:
              status: 200
              payload: {"isValid":true}
            Failure:
              status: 500
              error: "Unknown error"
  /login/passphrase:
    post:
      summary: Login using username and encrypted password
      description: Login behavior using username and password. An authentication cookie string for crawling with encrypted password and unique token will be returned.
      tags:
        - Authentication
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  $ref: "#/components/schemas/username"
                passphrase:
                  $ref: "#/components/schemas/passphrase"
      responses:
        200:
          $ref: "#/components/responses/Login"
  /login/password:
    post:
      summary: Login using username and plaintext password
      description: Login behavior using username and password. An authentication cookie string for crawling with encrypted password and unique token will be returned.
      tags:
        - Authentication
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                  username:
                    $ref: "#/components/schemas/username"
                  password:
                    type: string
                    format: password
                    description: Password of HKU Portal
      responses:
        200:
          $ref: "#/components/responses/Login"
  /:
    get:
      summary: WebAPI status placeholder
      description: Not useful excepts proving the WebAPI server is running
      tags:
        - Miscellaneous
      responses:
        200:
          $ref: "#/components/responses/Basic"
        500:
          $ref: "#/components/responses/Failure"
  /database:
    get:
      summary: RDS connection status test
      description: Query a record from relation in RDS and return
      tags:
        - Miscellaneous
      responses:
        200:
          description: 200 - Success<br>502 - RDS connectivity issue
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Standard-Array"
                  - $ref: "#/components/schemas/Error"
          examples:
            Success:
              status: 200
              payload: [{"Message":"Successfully returned from RDS"}]
            Failure:
              status: 502
              error: "Database connection failure"
components:
  responses:
    Login:
      description: 200 - Success<br>502 - RDS connectivity issue<br>401 - Username / Password mismatched<br>421 - No 2nd / 3rd level login redirect url matched<br>400 - No 2nd / 3rd level login redirect<br>500 - Unknown crawler issue<br>422 - Parameter(s) mismatched
      content:
        application/json:
          schema:
            properties:
              moodleKey:
                $ref: "#/components/schemas/moodleKey"
              passphrase:
                $ref: "#/components/schemas/passphrase"
              token:
                $ref: "#/components/schemas/token"
      examples:
        Success:
          status: 200
          payload: {"moodleKey":"********","passphrase":"********","token":"********"}
        Failure:
          status: 502
          error: 'Unauthenticated'
    Basic:
      description: Return standard message
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/Standard"
              - $ref: "#/components/schemas/Standard-Array"
      examples:
        Standard:
          status: 200
          payload: {}
        Standard-Array:
          status: 200
          payload: []
    Failure:
      description: Return error message
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    username:
      type: string
      description: Username of HKU Portal
    moodleKey:
      type: string
      description: Server-side encrypted Moodle authentication cookie string
    passphrase:
      type: string
      description: Server-side encrypted user password with `CIPER_KEY`. Irregular.
    token:
      type: string
      description: Generated account secret key from `UserId`, `Date` and `CIPER_KEY`
    Standard:
      type: object
      properties:
        status:
          type: number
        payload:
          type: object
    Standard-Array:
      type: object
      properties:
        status:
          type: number
        payload:
          type: array
    Error:
      type: object
      properties:
        status:
          type: number
        error:
          type: string
